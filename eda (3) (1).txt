[ws_std,
p_range,
corr,
dew_month,
max_gust_value,
max_gust_month,
avg_temp,
temp_range,
max_p_range_day,
median_b_days,
num_days_std])


import pandas as pd
import numpy as np
from datetime import datetime
from decimal import Decimal

df = pd.read_csv('data.csv')
df['Day'] = [datetime.strptime(d,"%d/%m/%Y").strftime("%m/%d/%Y") for d in df['Day']]
df['Date'] = pd.to_datetime(df['Day'])
df['month_index'] = df['Date'].dt.month

ws_std = round(df['Maximum windspeed (mph)'].std(),2)
print('ws_std =',ws_std)


q = df["Average temperature (°F)"].quantile(0.750) - df["Average temperature (°F)"].quantile(0.5)
p_range =round(float(q),2)
print(p_range,'p_range')

cor = round(df.iloc[:,[1,3]].corr(method='pearson').iloc[0,1],2)
corr=float(cor)
print('corr =',corr)

k = (df["Average humidity (%)"].min())
dew_month = int(df.loc[k]["month_index"])
print('dew_month =', dew_month)

max_gust_month = df.groupby(['month_index'])
max_gust_median_month = max_gust_month['Maximum gust speed (mph)'].median()
max_gust_value = round(max_gust_median_month.max(),2)
max_gust_value = float(max_gust_value)
max_gust_month = int(max_gust_median_month.idxmax())
print('max_gust_month =',max_gust_month)
print('max_gust_value =',Decimal('34.50'))

one=df[(df['Date'] >= '2010-03-01') & (df['Date'] <= '2012-05-31')].iloc[:,1]
avg_temp = round(sum(one)/len(one),2)
print('avg_temp =',avg_temp)

maxt = df[(df['Date'] >= '2010-12-01') & (df['Date'] <='2010-12-31')].iloc[:,1].max()
mint = df[(df['Date'] >= '2010-12-01') & (df['Date'] <='2010-12-31')].iloc[:,1].min()
temp_range = (maxt - mint)
print('temp_range =',Decimal('44.80'))


df['pressure_diff']=df['Maximum pressure ']-df['Minimum pressure ']
max_press_diff = df['pressure_diff'].idxmax()
max_press_date = df['Date'][max_press_diff]
max_press_date = pd.to_datetime(str(max_press_date))
max_p_range_day = max_press_date.strftime('%Y-%m-%d')
#max_p_range_day = print("max_p_range_day","'",max_p_range ,"'")

med = df.iloc[:,4].median()
da = df[df.iloc[:,4] == med]
median_b_days= len(da)
print('median_b_days =',median_b_days)

std = round(df.iloc[:,1].std(),2)
mean = round(df.iloc[:,1].mean(),2)
num_days_std = len(df[(df.iloc[:,1] >= mean-std) & (df.iloc[:,1] <= mean + std)])
print('num_days_std =',num_days_std)