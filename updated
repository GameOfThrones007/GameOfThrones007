import os
import numpy as np
from flask import Flask, render_template, send_from_directory, request
from sklearn.cluster import KMeans
import cv2
import datetime
import time

app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        numClusters = list(map(int, request.form['clusters'].split()))

        image_paths = ['mri1.jpg', 'mri2.jpg', 'Berlin.jpg']
        results_filenames = []

        for i, image_path in enumerate(image_paths):
            image = cv2.imread(os.path.join('images', image_path))
            reshaped = image.reshape(image.shape[0] * image.shape[1], image.shape[2])

            kmeans = KMeans(n_clusters=numClusters[i], n_init=40, max_iter=500).fit(reshaped)
            clustering = np.reshape(np.array(kmeans.labels_, dtype=np.uint8), (image.shape[0], image.shape[1]))

            sortedLabels = sorted([n for n in range(numClusters[i])], key=lambda x: -np.sum(clustering == x))

            kmeansImage = np.zeros(image.shape[:2], dtype=np.uint8)
            for j, label in enumerate(sortedLabels):
                kmeansImage[clustering == label] = int((255) / (numClusters[i] - 1)) * j

            concatImage = np.concatenate((image, 193 * np.ones((image.shape[0], int(0.0625 * image.shape[1]), 3), dtype=np.uint8), cv2.cvtColor(kmeansImage, cv2.COLOR_GRAY2BGR)), axis=1)

            dt = datetime.datetime.now()
            fileExtension = "png"
            filename = os.path.join('results', f"{dt.hour}:{dt.minute}:{dt.second}_C_{numClusters[i]}.{fileExtension}")
            results_filenames.append(filename)
            cv2.imwrite(filename, concatImage)

        return render_template('index.html', filenames=results_filenames)
    
    return render_template('index.html')

@app.route('/results/<filename>')
def results(filename):
    return send_from_directory('results', filename)

if __name__ == '__main__':
    app.run(debug=True)
