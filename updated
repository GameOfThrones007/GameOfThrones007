from flask import Flask, render_template, request
import os
import numpy as np
from sklearn.cluster import KMeans
import cv2
import datetime
import time

app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        num_clusters = list(map(int, request.form.get('num_clusters').split()))
        result_filenames = []

        for i, num_cluster in enumerate(num_clusters):
            image_path = os.path.join('images', f'mri{i+1}.jpg')
            image = cv2.imread(image_path)
            reshaped = image.reshape(image.shape[0] * image.shape[1], image.shape[2])

            kmeans = KMeans(n_clusters=num_cluster, n_init=40, max_iter=500).fit(reshaped)
            clustering = np.reshape(np.array(kmeans.labels_, dtype=np.uint8), (image.shape[0], image.shape[1]))

            sorted_labels = sorted([n for n in range(num_cluster)], key=lambda x: -np.sum(clustering == x))

            kmeans_image = np.zeros(image.shape[:2], dtype=np.uint8)
            for j, label in enumerate(sorted_labels):
                kmeans_image[clustering == label] = int((255) / (num_cluster - 1)) * j

            concat_image = np.concatenate((image, 193 * np.ones((image.shape[0], int(0.0625 * image.shape[1]), 3), dtype=np.uint8), cv2.cvtColor(kmeans_image, cv2.COLOR_GRAY2BGR)), axis=1)

            dt = datetime.datetime.now()
            file_extension = "png"
            filename = os.path.join('results', f'{dt.hour}:{dt.minute}:{dt.second}_C_{num_cluster}.{file_extension}')
            cv2.imwrite(filename, concat_image)
            result_filenames.append(filename)

        return render_template('index.html', result_filenames=result_filenames)

    return render_template('index.html', result_filenames=None)

if __name__ == '__main__':
    app.run(debug=True)
